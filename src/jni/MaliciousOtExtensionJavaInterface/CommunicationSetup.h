/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_biu_scapi_comm_twoPartyComm_NativeChannel */

#ifndef _Included_edu_biu_scapi_comm_twoPartyComm
#define _Included_edu_biu_scapi_comm_twoPartyComm
#ifdef __cplusplus
extern "C" {
#endif


/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeChannel
 * Method:    initSendSocket
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeChannel_initSendSocket
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeChannel
 * Method:    send
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeChannel_send
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeChannel
 * Method:    receive
 * Signature: (J)[B
 */
JNIEXPORT jbyteArray JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeChannel_receive
  (JNIEnv *, jobject, jlong);

/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeChannel
 * Method:    closeSockets
 * Signature: (JJ)Z
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeChannel_closeSockets
  (JNIEnv *, jobject, jlong, jlong);

//JNIEXPORT jboolean JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeChannel_enableNagle
 // (JNIEnv *, jobject, jlong, jlong);

#undef edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_MAX_PRIORITY
#define edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_MAX_PRIORITY 10L
#undef edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_MIN_PRIORITY
#define edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_MIN_PRIORITY 1L
#undef edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_NORM_PRIORITY
#define edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_NORM_PRIORITY 5L
#undef edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_NANOS_MAX
#define edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_NANOS_MAX 999999L
#undef edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_INITIAL_LOCAL_STORAGE_CAPACITY
#define edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_INITIAL_LOCAL_STORAGE_CAPACITY 5L
#undef edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_NO_REF
#define edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_NO_REF 0i64
/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread
 * Method:    initReceiveSocket
 * Signature: (Ljava/lang/String;I)J
 */
JNIEXPORT jlong JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_initReceiveSocket
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread
 * Method:    accept
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_accept
  (JNIEnv *, jobject, jlong);

/*
 * Class:     edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread
 * Method:    close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_edu_biu_scapi_comm_twoPartyComm_NativeSocketListenerThread_close
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif